
/*  
 Copyright (C) 2006 Ferdinando Ametrano
 Copyright (C) 2006 Cristina Duminuco
 Copyright (C) 2006 Eric Ehlers
 
 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it
 under the terms of the QuantLib license.  You should have received a
 copy of the license along with this program; if not, please email
 <quantlib-dev@lists.sf.net>. The license is also available online at
 <http://quantlib.org/license.shtml>.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

// This file was generated automatically by gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      gensrc/gensrc/stubs/stub.doxygen.file

/*! \page func_exercise Exercise
\section overview Overview
functions to construct and use Exercise objects.
\section functionlist Function List
\ref qlAmericanExercise ()\n
\ref qlBermudanExercise ()\n
\ref qlEuropeanExercise ()\n
\ref qlExerciseDates ()\n
\ref qlExerciseLastDate ()\n

\section documentation Function Documentation
\anchor qlAmericanExercise \b qlAmericanExercise
\code

string returnValue

qlAmericanExercise(
        string ObjectId
        long EarliestDate
        long LatestDate
        bool PayoffAtExpiry
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class AmericanExercise and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param EarliestDate earliest exercise date.
\param LatestDate latest exercise date.
\param PayoffAtExpiry payoff at expiry. Default value = false.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBermudanExercise \b qlBermudanExercise
\code

string returnValue

qlBermudanExercise(
        string ObjectId
        vector<long> Dates
        bool PayoffAtExpiry
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BermudanExercise and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param Dates dates.
\param PayoffAtExpiry payoff at expiry. Default value = false.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlEuropeanExercise \b qlEuropeanExercise
\code

string returnValue

qlEuropeanExercise(
        string ObjectId
        long ExpiryDate
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class EuropeanExercise and return its id

\par Supported Platforms:

C++, C, Calc, Excel, Guile

\param ObjectId id of object to be created
\param ExpiryDate expiry date.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlExerciseDates \b qlExerciseDates
\code

vector<long> returnValue

qlExerciseDates(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns all exercise dates.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::Exercise object
\param Trigger dependency tracking trigger



\anchor qlExerciseLastDate \b qlExerciseLastDate
\code

long returnValue

qlExerciseLastDate(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns last exercise date.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::Exercise object
\param Trigger dependency tracking trigger





*/


