
/*  
 Copyright (C) 2006, 2007, 2008, 2012 Ferdinando Ametrano
 Copyright (C) 2007 Eric Ehlers
 
 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it
 under the terms of the QuantLib license.  You should have received a
 copy of the license along with this program; if not, please email
 <quantlib-dev@lists.sf.net>. The license is also available online at
 <http://quantlib.org/license.shtml>.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

// This file was generated automatically by gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      gensrc/gensrc/stubs/stub.doxygen.file

/*! \page func_pricingengines Pricing Engines
\section overview Overview
functions to construct and use PricingEngine objects.
\section functionlist Function List
\ref qlAnalyticCapFloorEngine ()\n
\ref qlBachelierBlackFormula ()\n
\ref qlBachelierBlackFormula2 ()\n
\ref qlBinomialPricingEngine ()\n
\ref qlBlackCalculator ()\n
\ref qlBlackCalculator2 ()\n
\ref qlBlackCalculatorAlpha ()\n
\ref qlBlackCalculatorBeta ()\n
\ref qlBlackCalculatorDelta ()\n
\ref qlBlackCalculatorDeltaForward ()\n
\ref qlBlackCalculatorDividendRho ()\n
\ref qlBlackCalculatorElasticity ()\n
\ref qlBlackCalculatorElasticityForward ()\n
\ref qlBlackCalculatorGamma ()\n
\ref qlBlackCalculatorGammaForward ()\n
\ref qlBlackCalculatorItmAssetProbability ()\n
\ref qlBlackCalculatorItmCashProbability ()\n
\ref qlBlackCalculatorRho ()\n
\ref qlBlackCalculatorStrikeSensitivity ()\n
\ref qlBlackCalculatorTheta ()\n
\ref qlBlackCalculatorThetaPerDay ()\n
\ref qlBlackCalculatorValue ()\n
\ref qlBlackCalculatorVega ()\n
\ref qlBlackCapFloorEngine ()\n
\ref qlBlackCapFloorEngine2 ()\n
\ref qlBlackFormula ()\n
\ref qlBlackFormula2 ()\n
\ref qlBlackFormulaCashItmProbability ()\n
\ref qlBlackFormulaCashItmProbability2 ()\n
\ref qlBlackFormulaImpliedStdDev ()\n
\ref qlBlackFormulaImpliedStdDev2 ()\n
\ref qlBlackFormulaImpliedStdDevApproximation ()\n
\ref qlBlackFormulaImpliedStdDevApproximation2 ()\n
\ref qlBlackFormulaStdDevDerivative ()\n
\ref qlBlackFormulaStdDevDerivative2 ()\n
\ref qlBlackScholesCalculator ()\n
\ref qlBlackScholesCalculator2 ()\n
\ref qlBlackScholesCalculatorDelta ()\n
\ref qlBlackScholesCalculatorElasticity ()\n
\ref qlBlackScholesCalculatorGamma ()\n
\ref qlBlackScholesCalculatorTheta ()\n
\ref qlBlackScholesCalculatorThetaPerDay ()\n
\ref qlBlackSwaptionEngine ()\n
\ref qlBlackSwaptionEngine2 ()\n
\ref qlBondEngine ()\n
\ref qlDiscountingSwapEngine ()\n
\ref qlJamshidianSwaptionEngine ()\n
\ref qlModelG2SwaptionEngine ()\n
\ref qlPricingEngine ()\n
\ref qlTreeSwaptionEngine ()\n

\section documentation Function Documentation
\anchor qlAnalyticCapFloorEngine \b qlAnalyticCapFloorEngine
\code

string returnValue

qlAnalyticCapFloorEngine(
        string ObjectId
        string HandleModel
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class AnalyticCapFloorEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param HandleModel affine model (providing a discount bond option pricing formula) object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBachelierBlackFormula \b qlBachelierBlackFormula
\code

double returnValue

qlBachelierBlackFormula(
        string OptionType
        double Strike
        double AtmForwardValue
        double StdDev
        double Deflator
        any Trigger)

\endcode
\par Description:

Black style formula when forward is normal rather than log-normal, i.e. essentially the model of Bachelier.

\par Supported Platforms:

Excel

\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized ABSOLUTE volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Trigger dependency tracking trigger



\anchor qlBachelierBlackFormula2 \b qlBachelierBlackFormula2
\code

double returnValue

qlBachelierBlackFormula2(
        string Payoff
        double AtmForwardValue
        double StdDev
        double Deflator
        any Trigger)

\endcode
\par Description:

Black style formula when forward is normal rather than log-normal, i.e. essentially the model of Bachelier. It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param Payoff PlainVanillaPayoff object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized ABSOLUTE volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Trigger dependency tracking trigger



\anchor qlBinomialPricingEngine \b qlBinomialPricingEngine
\code

string returnValue

qlBinomialPricingEngine(
        string ObjectId
        string EngineID
        string ProcessID
        long TimeSteps
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class PricingEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param EngineID engine type.
\param ProcessID GeneralizedBlackScholesProcess object ID.
\param TimeSteps #/time steps.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackCalculator \b qlBlackCalculator
\code

string returnValue

qlBlackCalculator(
        string ObjectId
        string OptionType
        double Strike
        double AtmForwardValue
        double StdDev
        double Deflator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackCalculator and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackCalculator2 \b qlBlackCalculator2
\code

string returnValue

qlBlackCalculator2(
        string ObjectId
        string PayoffID
        double AtmForwardValue
        double StdDev
        double Deflator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackCalculator and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param PayoffID StrikedTypePayoff ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackCalculatorAlpha \b qlBlackCalculatorAlpha
\code

double returnValue

qlBlackCalculatorAlpha(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the alpha of the internal formulation of the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorBeta \b qlBlackCalculatorBeta
\code

double returnValue

qlBlackCalculatorBeta(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the beta of the internal formulation of the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorDelta \b qlBlackCalculatorDelta
\code

double returnValue

qlBlackCalculatorDelta(
        string ObjectId
        double Spot
        any Trigger)

\endcode
\par Description:

returns the sensitivity to change in the underlying spot price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Spot spot value.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorDeltaForward \b qlBlackCalculatorDeltaForward
\code

double returnValue

qlBlackCalculatorDeltaForward(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the sensitivity to change in the underlying forward price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorDividendRho \b qlBlackCalculatorDividendRho
\code

double returnValue

qlBlackCalculatorDividendRho(
        string ObjectId
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to dividend/growth rate for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorElasticity \b qlBlackCalculatorElasticity
\code

double returnValue

qlBlackCalculatorElasticity(
        string ObjectId
        double Spot
        any Trigger)

\endcode
\par Description:

returns the sensitivity in percent to a percent change in the underlying spot price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Spot spot value.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorElasticityForward \b qlBlackCalculatorElasticityForward
\code

double returnValue

qlBlackCalculatorElasticityForward(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the sensitivity in percent to a percent change in the underlying forward price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorGamma \b qlBlackCalculatorGamma
\code

double returnValue

qlBlackCalculatorGamma(
        string ObjectId
        double Spot
        any Trigger)

\endcode
\par Description:

returns the second order derivative with respect to change in the underlying spot price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Spot spot value.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorGammaForward \b qlBlackCalculatorGammaForward
\code

double returnValue

qlBlackCalculatorGammaForward(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the second order derivative with respect to change in the underlying forward price for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorItmAssetProbability \b qlBlackCalculatorItmAssetProbability
\code

double returnValue

qlBlackCalculatorItmAssetProbability(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the probability of being in the money in the asset martingale measure for the given BlackCalculator object. It is a risk-neutral probability, not the real world probability.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorItmCashProbability \b qlBlackCalculatorItmCashProbability
\code

double returnValue

qlBlackCalculatorItmCashProbability(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the probability of being in the money in the bond martingale measure for the given BlackCalculator object. It is a risk-neutral probability, not the real world probability.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorRho \b qlBlackCalculatorRho
\code

double returnValue

qlBlackCalculatorRho(
        string ObjectId
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to discounting rate for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorStrikeSensitivity \b qlBlackCalculatorStrikeSensitivity
\code

double returnValue

qlBlackCalculatorStrikeSensitivity(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the sensitivity to strike for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorTheta \b qlBlackCalculatorTheta
\code

double returnValue

qlBlackCalculatorTheta(
        string ObjectId
        double Spot
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to time to maturity for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Spot spot value.
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorThetaPerDay \b qlBlackCalculatorThetaPerDay
\code

double returnValue

qlBlackCalculatorThetaPerDay(
        string ObjectId
        double Spot
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to time to maturity per day, assuming 365 days per year, for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Spot spot value.
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorValue \b qlBlackCalculatorValue
\code

double returnValue

qlBlackCalculatorValue(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the option value for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackCalculatorVega \b qlBlackCalculatorVega
\code

double returnValue

qlBlackCalculatorVega(
        string ObjectId
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to volatility for the given BlackCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackCalculator object
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackCapFloorEngine \b qlBlackCapFloorEngine
\code

string returnValue

qlBlackCapFloorEngine(
        string ObjectId
        string YieldCurve
        string VolTS
        double Displacement
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackCapFloorEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting YieldTermStructure object ID.
\param VolTS OptionletVolatilityStructure object ID.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackCapFloorEngine2 \b qlBlackCapFloorEngine2
\code

string returnValue

qlBlackCapFloorEngine2(
        string ObjectId
        string YieldCurve
        string Vol
        double Displacement
        string DayCounter
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackCapFloorEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting YieldTermStructure object ID.
\param Vol Term (i.e. flat) volatility.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param DayCounter DayCounter ID. Default value = Actual/365 (Fixed).
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackFormula \b qlBlackFormula
\code

double returnValue

qlBlackFormula(
        string OptionType
        double Strike
        double AtmForwardValue
        double StdDev
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 formula for option pricing, using displacement.

\par Supported Platforms:

Excel

\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormula2 \b qlBlackFormula2
\code

double returnValue

qlBlackFormula2(
        string Payoff
        double AtmForwardValue
        double StdDev
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 formula for option pricing with displacement. It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param Payoff PlainVanillaPayoff object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaCashItmProbability \b qlBlackFormulaCashItmProbability
\code

double returnValue

qlBlackFormulaCashItmProbability(
        string OptionType
        double Strike
        double AtmForwardValue
        double StdDev
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 probability of being in the money (in the bond martingale measure), i.e. N(d2). It is a risk-neutral probability, not the real world one.

\par Supported Platforms:

Excel

\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaCashItmProbability2 \b qlBlackFormulaCashItmProbability2
\code

double returnValue

qlBlackFormulaCashItmProbability2(
        string Payoff
        double AtmForwardValue
        double StdDev
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 probability of being in the money (in the bond martingale measure), i.e. N(d2). It is a risk-neutral probability, not the real world one. It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param Payoff PlainVanillaPayoff  object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaImpliedStdDev \b qlBlackFormulaImpliedStdDev
\code

double returnValue

qlBlackFormulaImpliedStdDev(
        string OptionType
        double Strike
        double AtmForwardValue
        double OptionPrice
        double Deflator
        double Displacement
        double Guess
        double Accuracy
        long MaxIter
        any Trigger)

\endcode
\par Description:

Standard deviation (annualized percentage volatility times the square root of time to option expiry) implied by the Black 1976 formula with displacement.

\par Supported Platforms:

Excel

\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param OptionPrice option price.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Guess standard deviation guess. Default value = QuantLib::Null<QuantLib::Real>().
\param Accuracy solver accuracy. Default value = 1.0e-6.
\param MaxIter solver max iterations. Default value = 100.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaImpliedStdDev2 \b qlBlackFormulaImpliedStdDev2
\code

double returnValue

qlBlackFormulaImpliedStdDev2(
        string PayoffID
        double AtmForwardValue
        double OptionPrice
        double Deflator
        double Displacement
        double Guess
        double Accuracy
        long MaxIter
        any Trigger)

\endcode
\par Description:

Standard deviation (annualized percentage volatility times the square root of time to option expiry) implied by the Black 1976 formula. It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param PayoffID PlainVanillaPayoff object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param OptionPrice option price.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Guess standard deviation guess. Default value = QuantLib::Null<QuantLib::Real>().
\param Accuracy standard deviation accuracy. Default value = 1.0e-6.
\param MaxIter solver max iterations. Default value = 100.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaImpliedStdDevApproximation \b qlBlackFormulaImpliedStdDevApproximation
\code

double returnValue

qlBlackFormulaImpliedStdDevApproximation(
        string OptionType
        double Strike
        double AtmForwardValue
        double OptionPrice
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Approximation for the standard deviation (annualized percentage volatility times the square root of time to option expiry) implied by the Black 1976 formula.

\par Supported Platforms:

Excel

\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param OptionPrice option price.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaImpliedStdDevApproximation2 \b qlBlackFormulaImpliedStdDevApproximation2
\code

double returnValue

qlBlackFormulaImpliedStdDevApproximation2(
        string Payoff
        double AtmForwardValue
        double OptionPrice
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Approximation for the standard deviation (annualized percentage volatility times the square root of time to option expiry) implied by the Black 1976 formula. It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param Payoff PlainVanillaPayoff object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param OptionPrice option price.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaStdDevDerivative \b qlBlackFormulaStdDevDerivative
\code

double returnValue

qlBlackFormulaStdDevDerivative(
        double Strike
        double AtmForwardValue
        double StdDev
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 formula for the derivative with respect to the standard deviation (annualized percentage volatility times the square root of time to option expiry), with displacement.

\par Supported Platforms:

Excel

\param Strike option strike.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackFormulaStdDevDerivative2 \b qlBlackFormulaStdDevDerivative2
\code

double returnValue

qlBlackFormulaStdDevDerivative2(
        string PayoffID
        double AtmForwardValue
        double StdDev
        double Deflator
        double Displacement
        any Trigger)

\endcode
\par Description:

Black 1976 formula for the derivative with respect to the standard deviation (annualized percentage volatility times the square root of time to option expiry). It uses a PlainVanillaPayoff object as input.

\par Supported Platforms:

Excel

\param PayoffID PlainVanillaPayoff object ID.
\param AtmForwardValue underlying asset at-the-money forward value.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Trigger dependency tracking trigger



\anchor qlBlackScholesCalculator \b qlBlackScholesCalculator
\code

string returnValue

qlBlackScholesCalculator(
        string ObjectId
        string OptionType
        double Strike
        double Spot
        double Growth
        double StdDev
        double Deflator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackScholesCalculator and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param OptionType option type (i.e. Call or Put).
\param Strike option strike.
\param Spot spot value.
\param Growth growth discount factor. Default value = 1.0.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackScholesCalculator2 \b qlBlackScholesCalculator2
\code

string returnValue

qlBlackScholesCalculator2(
        string ObjectId
        string PayoffID
        double Spot
        double Growth
        double StdDev
        double Deflator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackScholesCalculator and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param PayoffID StrikedTypePayoff ID.
\param Spot spot value.
\param Growth growth discount factor. Default value = 1.0.
\param StdDev standard deviation, i.e. annualized percentage volatility times the square root of time to option expiry.
\param Deflator Deflator (usually the discount factor, or the annuity, etc.). Default value = 1.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackScholesCalculatorDelta \b qlBlackScholesCalculatorDelta
\code

double returnValue

qlBlackScholesCalculatorDelta(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the sensitivity to change in the underlying spot price for the given BlackScholesCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackScholesCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackScholesCalculatorElasticity \b qlBlackScholesCalculatorElasticity
\code

double returnValue

qlBlackScholesCalculatorElasticity(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the sensitivity in percent to a percent change in the underlying spot price for the given BlackScholesCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackScholesCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackScholesCalculatorGamma \b qlBlackScholesCalculatorGamma
\code

double returnValue

qlBlackScholesCalculatorGamma(
        string ObjectId
        any Trigger)

\endcode
\par Description:

returns the second order derivative with respect to change in the underlying spot price for the given BlackScholesCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackScholesCalculator object
\param Trigger dependency tracking trigger



\anchor qlBlackScholesCalculatorTheta \b qlBlackScholesCalculatorTheta
\code

double returnValue

qlBlackScholesCalculatorTheta(
        string ObjectId
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to time to maturity for the given BlackScholesCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackScholesCalculator object
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackScholesCalculatorThetaPerDay \b qlBlackScholesCalculatorThetaPerDay
\code

double returnValue

qlBlackScholesCalculatorThetaPerDay(
        string ObjectId
        double TimeToMaturity
        any Trigger)

\endcode
\par Description:

returns the sensitivity to time to maturity per day, assuming 365 days per year, for the given BlackScholesCalculator object.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::BlackScholesCalculator object
\param TimeToMaturity time to maturity in years.
\param Trigger dependency tracking trigger



\anchor qlBlackSwaptionEngine \b qlBlackSwaptionEngine
\code

string returnValue

qlBlackSwaptionEngine(
        string ObjectId
        string YieldCurve
        string VolTS
        double Displacement
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackSwaptionEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting yield term structure object ID.
\param VolTS SwaptionVolatilityStructure object ID.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBlackSwaptionEngine2 \b qlBlackSwaptionEngine2
\code

string returnValue

qlBlackSwaptionEngine2(
        string ObjectId
        string YieldCurve
        string Vol
        double Displacement
        string DayCounter
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BlackSwaptionEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting yield term structure object ID.
\param Vol swaption Black volatility.
\param Displacement displacement in a displaced diffusion model. Default value = 0.0.
\param DayCounter DayCounter ID. Default value = Actual/365 (Fixed).
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBondEngine \b qlBondEngine
\code

string returnValue

qlBondEngine(
        string ObjectId
        string YieldCurve
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BondEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting yield term structure object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlDiscountingSwapEngine \b qlDiscountingSwapEngine
\code

string returnValue

qlDiscountingSwapEngine(
        string ObjectId
        string YieldCurve
        bool IncludeSettlDate
        long SettlementDate
        long NpvDate
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class DiscountingSwapEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve discounting yield term structure object ID.
\param IncludeSettlDate TRUE if cashflows paid at the settlement date must be taken into account. Default value = true.
\param SettlementDate cashflows before this date are not taken into account. If missing it is assumed equal to the discounting yield term structure's reference date. Default value = QuantLib::Date().
\param NpvDate all cashflows are discounted to this date. If missing it is assumed equal to the discounting yield term structure's reference date. Default value = QuantLib::Date().
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlJamshidianSwaptionEngine \b qlJamshidianSwaptionEngine
\code

string returnValue

qlJamshidianSwaptionEngine(
        string ObjectId
        string Model
        string YieldCurve
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class JamshidianSwaptionEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param Model Model object ID.
\param YieldCurve yield term structure object ID. Default value = .
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlModelG2SwaptionEngine \b qlModelG2SwaptionEngine
\code

string returnValue

qlModelG2SwaptionEngine(
        string ObjectId
        string Model
        double Range
        long Intervals
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class G2SwaptionEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param Model G2 Model object ID.
\param Range Range.
\param Intervals Intervals.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlPricingEngine \b qlPricingEngine
\code

string returnValue

qlPricingEngine(
        string ObjectId
        string EngineID
        string ProcessID
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class PricingEngine and return its id

\par Supported Platforms:

C++, C, Calc, Excel, Guile

\param ObjectId id of object to be created
\param EngineID engine type.
\param ProcessID GeneralizedBlackScholesProcess object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlTreeSwaptionEngine \b qlTreeSwaptionEngine
\code

string returnValue

qlTreeSwaptionEngine(
        string ObjectId
        string Model
        long Nsteps
        string YieldCurve
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class TreeSwaptionEngine and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param Model Model object ID.
\param Nsteps Number of time steps.
\param YieldCurve yield term structure object ID. Default value = .
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag





*/


