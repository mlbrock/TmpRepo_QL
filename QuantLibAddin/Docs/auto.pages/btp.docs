
/*  
 Copyright (C) 2010, 2011 Ferdinando Ametrano
 
 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it
 under the terms of the QuantLib license.  You should have received a
 copy of the license along with this program; if not, please email
 <quantlib-dev@lists.sf.net>. The license is also available online at
 <http://quantlib.org/license.shtml>.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

// This file was generated automatically by gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      gensrc/gensrc/stubs/stub.doxygen.file

/*! \page func_btp BTP
\section overview Overview
functions to construct and use BTP objects.
\section functionlist Function List
\ref qlBTP ()\n
\ref qlBTP2 ()\n
\ref qlCCTEU ()\n
\ref qlRendistatoBasket ()\n
\ref qlRendistatoBasketOutstanding ()\n
\ref qlRendistatoBasketOutstandings ()\n
\ref qlRendistatoBasketSize ()\n
\ref qlRendistatoBasketWeights ()\n
\ref qlRendistatoCalculator ()\n
\ref qlRendistatoCalculatorDuration ()\n
\ref qlRendistatoCalculatorDurations ()\n
\ref qlRendistatoCalculatorEquivalentSwapDuration ()\n
\ref qlRendistatoCalculatorEquivalentSwapLength ()\n
\ref qlRendistatoCalculatorEquivalentSwapRate ()\n
\ref qlRendistatoCalculatorEquivalentSwapSpread ()\n
\ref qlRendistatoCalculatorEquivalentSwapYield ()\n
\ref qlRendistatoCalculatorSwapDurations ()\n
\ref qlRendistatoCalculatorSwapLengths ()\n
\ref qlRendistatoCalculatorSwapRates ()\n
\ref qlRendistatoCalculatorSwapYields ()\n
\ref qlRendistatoCalculatorYield ()\n
\ref qlRendistatoCalculatorYields ()\n
\ref qlRendistatoEquivalentSwapLengthQuote ()\n
\ref qlRendistatoEquivalentSwapSpreadQuote ()\n

\section documentation Function Documentation
\anchor qlBTP \b qlBTP
\code

string returnValue

qlBTP(
        string ObjectId
        string Description
        long MaturityDate
        double Coupon
        long StartDate
        long IssueDate
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BTP and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param Description Bond description string. Autogenerated if null. Default value = std::string().
\param MaturityDate maturityDate date.
\param Coupon simple annual compounding coupon rate.
\param StartDate accrual first start date. Default value = QuantLib::Date().
\param IssueDate issue date: the bond can't be traded until then. Default value = QuantLib::Date().
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlBTP2 \b qlBTP2
\code

string returnValue

qlBTP2(
        string ObjectId
        string Description
        long MaturityDate
        double Coupon
        double Redemption
        long StartDate
        long IssueDate
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class BTP and return its id, allowing for non-100 redemption.

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param Description Bond description string. Autogenerated if null. Default value = std::string().
\param MaturityDate maturityDate date.
\param Coupon simple annual compounding coupon rate.
\param Redemption Redemption value. Default value = 100.0.
\param StartDate accrual first start date. Default value = QuantLib::Date().
\param IssueDate issue date: the bond can't be traded until then. Default value = QuantLib::Date().
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlCCTEU \b qlCCTEU
\code

string returnValue

qlCCTEU(
        string ObjectId
        string Description
        long MaturityDate
        double Spread
        string FwdCurve
        long StartDate
        long IssueDate
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class CCTEU and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param Description Bond description string. Autogenerated if null. Default value = std::string().
\param MaturityDate maturityDate date.
\param Spread spread over Euribor6M.
\param FwdCurve Forwarding YieldTermStructure object ID.
\param StartDate accrual first start date. Default value = QuantLib::Date().
\param IssueDate issue date: the bond can't be traded until then. Default value = QuantLib::Date().
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlRendistatoBasket \b qlRendistatoBasket
\code

string returnValue

qlRendistatoBasket(
        string ObjectId
        vector<string> BTPs
        vector<double> Outstandings
        vector<string> Prices
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class RendistatoBasket and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param BTPs BTP IDs.
\param Outstandings BTP outstanding amounts.
\param Prices BTP clean prices Quotes.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlRendistatoBasketOutstanding \b qlRendistatoBasketOutstanding
\code

double returnValue

qlRendistatoBasketOutstanding(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the overall outstanding of the BTPs in the RendistatoBasket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoBasket object
\param Trigger dependency tracking trigger



\anchor qlRendistatoBasketOutstandings \b qlRendistatoBasketOutstandings
\code

vector<double> returnValue

qlRendistatoBasketOutstandings(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the outstandings of the BTPs in the RendistatoBasket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoBasket object
\param Trigger dependency tracking trigger



\anchor qlRendistatoBasketSize \b qlRendistatoBasketSize
\code

long returnValue

qlRendistatoBasketSize(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the number of BTPs in the RendistatoBasket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoBasket object
\param Trigger dependency tracking trigger



\anchor qlRendistatoBasketWeights \b qlRendistatoBasketWeights
\code

vector<double> returnValue

qlRendistatoBasketWeights(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the weights of the BTPs in the RendistatoBasket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoBasket object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculator \b qlRendistatoCalculator
\code

string returnValue

qlRendistatoCalculator(
        string ObjectId
        string RendistatoBasket
        string Euribor
        string YieldCurve
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class RendistatoCalculator and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param RendistatoBasket RendistatoBasket object ID.
\param Euribor Euribor index object ID.
\param YieldCurve discounting YieldTermStructure object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlRendistatoCalculatorDuration \b qlRendistatoCalculatorDuration
\code

double returnValue

qlRendistatoCalculatorDuration(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's duration.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorDurations \b qlRendistatoCalculatorDurations
\code

vector<double> returnValue

qlRendistatoCalculatorDurations(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the durations of the BTPs in the RendistatoCalculator's underlying basket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorEquivalentSwapDuration \b qlRendistatoCalculatorEquivalentSwapDuration
\code

double returnValue

qlRendistatoCalculatorEquivalentSwapDuration(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swap duration.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorEquivalentSwapLength \b qlRendistatoCalculatorEquivalentSwapLength
\code

double returnValue

qlRendistatoCalculatorEquivalentSwapLength(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swap lenght in years.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorEquivalentSwapRate \b qlRendistatoCalculatorEquivalentSwapRate
\code

double returnValue

qlRendistatoCalculatorEquivalentSwapRate(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swap rate.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorEquivalentSwapSpread \b qlRendistatoCalculatorEquivalentSwapSpread
\code

double returnValue

qlRendistatoCalculatorEquivalentSwapSpread(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swap spread.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorEquivalentSwapYield \b qlRendistatoCalculatorEquivalentSwapYield
\code

double returnValue

qlRendistatoCalculatorEquivalentSwapYield(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swap yield.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorSwapDurations \b qlRendistatoCalculatorSwapDurations
\code

vector<double> returnValue

qlRendistatoCalculatorSwapDurations(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swaps' durations.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorSwapLengths \b qlRendistatoCalculatorSwapLengths
\code

vector<double> returnValue

qlRendistatoCalculatorSwapLengths(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swaps' lengths.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorSwapRates \b qlRendistatoCalculatorSwapRates
\code

vector<double> returnValue

qlRendistatoCalculatorSwapRates(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swaps' rates.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorSwapYields \b qlRendistatoCalculatorSwapYields
\code

vector<double> returnValue

qlRendistatoCalculatorSwapYields(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's equivalent swaps' yields.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorYield \b qlRendistatoCalculatorYield
\code

double returnValue

qlRendistatoCalculatorYield(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns RendistatoCalculator's yield.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoCalculatorYields \b qlRendistatoCalculatorYields
\code

vector<double> returnValue

qlRendistatoCalculatorYields(
        string ObjectId
        any Trigger)

\endcode
\par Description:

Returns the yields of the BTPs in the RendistatoCalculator's underlying basket.

\par Supported Platforms:

Excel

\param ObjectId id of existing QuantLib::RendistatoCalculator object
\param Trigger dependency tracking trigger



\anchor qlRendistatoEquivalentSwapLengthQuote \b qlRendistatoEquivalentSwapLengthQuote
\code

string returnValue

qlRendistatoEquivalentSwapLengthQuote(
        string ObjectId
        string RendistatoCalculator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class RendistatoEquivalentSwapLengthQuote and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param RendistatoCalculator RendistatoCalculator object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlRendistatoEquivalentSwapSpreadQuote \b qlRendistatoEquivalentSwapSpreadQuote
\code

string returnValue

qlRendistatoEquivalentSwapSpreadQuote(
        string ObjectId
        string RendistatoCalculator
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class RendistatoEquivalentSwapSpreadQuote and return its id

\par Supported Platforms:

C++, Excel

\param ObjectId id of object to be created
\param RendistatoCalculator RendistatoCalculator object ID.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag





*/


